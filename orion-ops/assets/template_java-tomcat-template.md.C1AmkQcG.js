import{_ as a,c as s,o as n,a3 as e,aa as t,ab as p,ac as l}from"./chunks/framework.AACgLkS6.js";const v=JSON.parse('{"title":"tomcat 项目模板","description":"","frontmatter":{"title":"tomcat 项目模板"},"headers":[],"relativePath":"template/java-tomcat-template.md","filePath":"template/java-tomcat-template.md"}'),i={name:"template/java-tomcat-template.md"},c=e('<h3 id="tomcat-项目模板" tabindex="-1">tomcat 项目模板 <a class="header-anchor" href="#tomcat-项目模板" aria-label="Permalink to &quot;tomcat 项目模板&quot;">​</a></h3><p>以一个普通的 maven 构建的 web 项目为例<br> 构建操作为: <code>checkout</code> &gt; <code>maven build</code><br> 发布操作为: <code>删除 tomcat/webapps/ROOT 和 ROOT.war</code> &gt; <code>传输ROOT.war</code> &gt; <code>shutdown.sh</code> &gt; <code>startup.sh</code></p><h3 id="构建配置预览" tabindex="-1">构建配置预览 <a class="header-anchor" href="#构建配置预览" aria-label="Permalink to &quot;构建配置预览&quot;">​</a></h3><p><img src="'+t+'" alt="构建配置" title="构建配置"></p><h3 id="发布配置预览" tabindex="-1">发布配置预览 <a class="header-anchor" href="#发布配置预览" aria-label="Permalink to &quot;发布配置预览&quot;">​</a></h3><p><img src="'+p+'" alt="发布配置1" title="发布配置1"><img src="'+l+`" alt="发布配置2" title="发布配置2"></p><h3 id="构建配置" tabindex="-1">构建配置 <a class="header-anchor" href="#构建配置" aria-label="Permalink to &quot;构建配置&quot;">​</a></h3><h4 id="构建产物路径" tabindex="-1">构建产物路径 <a class="header-anchor" href="#构建产物路径" aria-label="Permalink to &quot;构建产物路径&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>构建产物路径一般是在代码目录下的 target/xxx.war</span></span>
<span class="line"><span>target/demo-1.0.0-SNAPSHOT.war</span></span></code></pre></div><h4 id="构建操作1-检出代码" tabindex="-1">构建操作1 检出代码 <a class="header-anchor" href="#构建操作1-检出代码" aria-label="Permalink to &quot;构建操作1 检出代码&quot;">​</a></h4><p>无需操作</p><h4 id="构建操作2-构建应用" tabindex="-1">构建操作2 构建应用 <a class="header-anchor" href="#构建操作2-构建应用" aria-label="Permalink to &quot;构建操作2 构建应用&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>source /etc/profile</span></span>
<span class="line"><span>echo &#39;开始构建&#39;</span></span>
<span class="line"><span>cd @{build.repo_home}</span></span>
<span class="line"><span>mvn -U clean install -DskipTests</span></span>
<span class="line"><span>echo &#39;构建完成&#39;</span></span></code></pre></div><h3 id="发布配置" tabindex="-1">发布配置 <a class="header-anchor" href="#发布配置" aria-label="Permalink to &quot;发布配置&quot;">​</a></h3><h4 id="发布操作1-删除原有文件" tabindex="-1">发布操作1 删除原有文件 <a class="header-anchor" href="#发布操作1-删除原有文件" aria-label="Permalink to &quot;发布操作1 删除原有文件&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ROOT_PATH=/data/apache-tomcat-9.0.62/ROOT</span></span>
<span class="line"><span>ROOT_WAR=/data/apache-tomcat-9.0.62/ROOT.war</span></span>
<span class="line"><span>if [ -d &quot;$ROOT_PATH&quot; ]; then</span></span>
<span class="line"><span> rm -rf $ROOT_PATH</span></span>
<span class="line"><span> echo &#39;删除ROOT文件夹&#39;</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>if [ -f &quot;$ROOT_WAR&quot; ]; then</span></span>
<span class="line"><span> rm -rf $ROOT_WAR</span></span>
<span class="line"><span> echo &#39;删除ROOT.war&#39;</span></span>
<span class="line"><span>fi</span></span></code></pre></div><h4 id="发布操作2-传输文件" tabindex="-1">发布操作2 传输文件 <a class="header-anchor" href="#发布操作2-传输文件" aria-label="Permalink to &quot;发布操作2 传输文件&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>传输产物文件的绝对路径应该为 tomcat/webapps 下的 ROOT.war 或 项目名称.war</span></span>
<span class="line"><span>/data/apache-tomcat-9.0.62/webapps/ROOT.war</span></span></code></pre></div><h4 id="发布操作3-启动项目" tabindex="-1">发布操作3 启动项目 <a class="header-anchor" href="#发布操作3-启动项目" aria-label="Permalink to &quot;发布操作3 启动项目&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /data/apache-tomcat-9.0.62/bin</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 关闭</span></span>
<span class="line"><span>echo &#39;关闭项目&#39;</span></span>
<span class="line"><span>./shutdown.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启动</span></span>
<span class="line"><span>echo &#39;启动项目&#39;</span></span>
<span class="line"><span>(nohup ./startup.sh &gt;&gt; start.log 2&gt;&amp;1 &amp;) &amp;&amp; sleep 1</span></span>
<span class="line"><span>echo &#39;启动完成&#39;</span></span></code></pre></div>`,20),o=[c];function h(r,d,m,u,b,g){return n(),s("div",null,o)}const O=a(i,[["render",h]]);export{v as __pageData,O as default};
