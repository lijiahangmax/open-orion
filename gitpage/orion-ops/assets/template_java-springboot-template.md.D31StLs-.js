import{_ as a,c as s,o as n,a3 as e,a7 as p,a8 as t,a9 as i}from"./chunks/framework.ColA7jXW.js";const k=JSON.parse('{"title":"springboot 项目模板","description":"","frontmatter":{"title":"springboot 项目模板"},"headers":[],"relativePath":"template/java-springboot-template.md","filePath":"template/java-springboot-template.md"}'),l={name:"template/java-springboot-template.md"},o=e('<h3 id="springboot-项目模板" tabindex="-1">springboot 项目模板 <a class="header-anchor" href="#springboot-项目模板" aria-label="Permalink to &quot;springboot 项目模板&quot;">​</a></h3><p>以一个普通的 maven 构建的 springboot 项目为例<br> 构建操作为: <code>checkout</code> &gt; <code>maven build</code><br> 发布操作为: <code>删除旧版文件</code> &gt; <code>传输文件</code> &gt; <code>nohup java -jar demo-1.0.0-SNAPSHOT.jar &amp;</code></p><h3 id="构建配置预览" tabindex="-1">构建配置预览 <a class="header-anchor" href="#构建配置预览" aria-label="Permalink to &quot;构建配置预览&quot;">​</a></h3><p><img src="'+p+'" alt="构建配置" title="构建配置"></p><h3 id="发布配置预览" tabindex="-1">发布配置预览 <a class="header-anchor" href="#发布配置预览" aria-label="Permalink to &quot;发布配置预览&quot;">​</a></h3><p><img src="'+t+'" alt="发布配置1" title="发布配置1"><img src="'+i+`" alt="发布配置2" title="发布配置2"></p><h3 id="构建配置" tabindex="-1">构建配置 <a class="header-anchor" href="#构建配置" aria-label="Permalink to &quot;构建配置&quot;">​</a></h3><h4 id="构建产物路径" tabindex="-1">构建产物路径 <a class="header-anchor" href="#构建产物路径" aria-label="Permalink to &quot;构建产物路径&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>构建产物路径一般是在代码目录下的 target/xxx.jar</span></span>
<span class="line"><span>target/demo-1.0.0-SNAPSHOT.jar</span></span></code></pre></div><h4 id="构建操作1-检出代码" tabindex="-1">构建操作1 检出代码 <a class="header-anchor" href="#构建操作1-检出代码" aria-label="Permalink to &quot;构建操作1 检出代码&quot;">​</a></h4><p>无需操作</p><h4 id="构建操作2-构建应用" tabindex="-1">构建操作2 构建应用 <a class="header-anchor" href="#构建操作2-构建应用" aria-label="Permalink to &quot;构建操作2 构建应用&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>source /etc/profile</span></span>
<span class="line"><span>echo &#39;开始构建&#39;</span></span>
<span class="line"><span>cd @{build.repo_home}</span></span>
<span class="line"><span>mvn -U clean install -DskipTests</span></span>
<span class="line"><span>echo &#39;构建完成&#39;</span></span></code></pre></div><h3 id="发布配置" tabindex="-1">发布配置 <a class="header-anchor" href="#发布配置" aria-label="Permalink to &quot;发布配置&quot;">​</a></h3><h4 id="发布操作1-删除旧版文件" tabindex="-1">发布操作1 删除旧版文件 <a class="header-anchor" href="#发布操作1-删除旧版文件" aria-label="Permalink to &quot;发布操作1 删除旧版文件&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>jarFile=/data/dist/demo.jar</span></span>
<span class="line"><span>if [ -f &quot;$jarFile&quot; ]; then</span></span>
<span class="line"><span> rm -rf $jarFile</span></span>
<span class="line"><span> echo &#39;删除/data/dist/demo.jar&#39;</span></span>
<span class="line"><span>fi</span></span></code></pre></div><h4 id="发布操作2-传输文件" tabindex="-1">发布操作2 传输文件 <a class="header-anchor" href="#发布操作2-传输文件" aria-label="Permalink to &quot;发布操作2 传输文件&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>设置一个传输产物文件的绝对路径</span></span>
<span class="line"><span>/data/dist/demo.jar</span></span></code></pre></div><h4 id="发布操作3-启动项目" tabindex="-1">发布操作3 启动项目 <a class="header-anchor" href="#发布操作3-启动项目" aria-label="Permalink to &quot;发布操作3 启动项目&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>source /etc/profile</span></span>
<span class="line"><span>jarName=demo.jar</span></span>
<span class="line"><span># kill</span></span>
<span class="line"><span>PID=$(ps -ef | grep $jarName | grep -v grep | awk &#39;{print $2}&#39;)</span></span>
<span class="line"><span>if [ ! -z $PID ]; then</span></span>
<span class="line"><span>   kill -9 $PID</span></span>
<span class="line"><span>   echo &#39;kill&#39; $PID</span></span>
<span class="line"><span>fi</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 启动</span></span>
<span class="line"><span>echo &#39;启动项目&#39;</span></span>
<span class="line"><span>cd /data/dist</span></span>
<span class="line"><span>(nohup java -jar $jarName &gt;&gt; run.log 2&gt;&amp;1 &amp;) &amp;&amp; sleep 1</span></span>
<span class="line"><span>echo &#39;启动完成&#39;</span></span></code></pre></div>`,20),c=[o];function r(d,h,b,m,u,g){return n(),s("div",null,c)}const _=a(l,[["render",r]]);export{k as __pageData,_ as default};
