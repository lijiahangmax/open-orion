import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.CZaT1x1x.js";const c=JSON.parse('{"title":"常见问题","description":"","frontmatter":{"title":"常见问题"},"headers":[],"relativePath":"support/faq.md","filePath":"support/faq.md"}'),h={name:"support/faq.md"},p=n(`<h3 id="orion-ops-执行安装操作时失败怎么办" tabindex="-1">orion-ops 执行安装操作时失败怎么办? <a class="header-anchor" href="#orion-ops-执行安装操作时失败怎么办" aria-label="Permalink to &quot;orion-ops 执行安装操作时失败怎么办?&quot;">​</a></h3><p>手动启动:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME/orion-ops/plugins/start-machine-monitor-agent.sh</span></span></code></pre></div><p>如果启动脚本不存在则需要手动安装步骤:</p><ol><li>在机器列表中找到失败的机器 点击详情 记录机器id</li><li>将 orion-ops 部署机器下的 agent 包复制到需要手动启动的机器上</li><li>创建启动脚本</li><li>执行启动脚本</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">machineId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">刚刚记录的机器id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agentJarPath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">agent文件路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AGENT_PROCESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">machine-monitor-agent</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">STARTED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $AGENT_PROCESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.jar&#39; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $2}&#39; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $AGENT_PROCESS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.jar&#39; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $2}&#39;\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># KILL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ $STARTED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;agent not started&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;kill pid </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	kill</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;starting &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $AGENT_PROCESS </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;....&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># START</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nohup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -XX:MetaspaceSize=128m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -XX:MaxMetaspaceSize=56m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xms128m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xmx128m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xmn32m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Xss256k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -XX:SurvivorRatio=8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -XX:+UseConcMarkSweepGC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${agentJarPath} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--machineId=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">machineId</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --spring.profiles.active=prod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;agent started result: &#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> $?</span></span></code></pre></div><h3 id="调用-orion-ops-的通知服务失败怎么办" tabindex="-1">调用 orion-ops 的通知服务失败怎么办? <a class="header-anchor" href="#调用-orion-ops-的通知服务失败怎么办" aria-label="Permalink to &quot;调用 orion-ops 的通知服务失败怎么办?&quot;">​</a></h3><p>检查 agent 包的配置 <code>orion.ops.access.host</code> <code>orion.ops.access.secret</code> 是否正确<br> 检查 orion-ops 包的配置 <code>expose.api.access.secret</code> 和agent 包的配置 <code>orion.ops.access.secret</code> 是否匹配</p><h3 id="orion-ops-提示-api调用异常怎么办" tabindex="-1">orion-ops 提示 api调用异常怎么办? <a class="header-anchor" href="#orion-ops-提示-api调用异常怎么办" aria-label="Permalink to &quot;orion-ops 提示 api调用异常怎么办?&quot;">​</a></h3><p>提示 <code>api调用异常</code> 的主要原因是 <code>orion-ops</code> 调用 agent 的 http api 失败</p><ol><li>点击插件配置 检查 <code>url</code> 和 <code>accessToken</code> 是否正确</li><li>进入机器终端, 使用 <code>ps -ef | grep java</code> 检查 agent 进程是否启动</li><li>进入机器终端, 使用 <code>curl localhost:9220</code> 检查 agent 进程是否有效</li><li>进入 orion-ops 终端, 使用 <code>curl ip:9220</code> 检查 agent 进程是否有效</li><li>如果 agent 正常启动, 需要考虑 orion-ops 的部署机器的防火墙</li></ol>`,11),t=[p];function l(k,e,r,d,o,F){return a(),i("div",null,t)}const y=s(h,[["render",l]]);export{c as __pageData,y as default};
